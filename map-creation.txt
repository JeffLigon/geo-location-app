These are instructions for creating a map of IP addresses that are attacking my server with
ssh requests as found by Fail2ban.

This is the site to create maps:

https://www.mapcustomizer.com/#

This website accepts bulk location input.
i.e.
20, 77
37, -97
33, -96

First get list of ip addresses being banned.

sudo iptables -S | grep '\-A f2b-sshd -s'

(if you want a count)
jeff@iotservertwo:~$ sudo iptables -S | grep -c '\-A f2b-sshd -s'
2865

Next step is to create file with just a list of all IP addresses.
sudo iptables -S | grep '\-A f2b-sshd -s' > iptables-042920.txt

Creates file iptables-042920.txt with output of iptables.
Need to remove out fluff to only have IP addresses.
cut -d ' ' -f 4 iptables-042920.txt | cut -d/ -f 1 > listofips-042920.txt

Now you have a file 'listofips-042920.txt' with a list of all blocked IP addresses.

Next step is to geolocate each IP address using geolocate api:

curl "https://tools.keycdn.com/geo.json?host=1.169.101.65"

jeff@iotservertwo:~$ curl "https://tools.keycdn.com/geo.json?host=1.169.101.65"
{"status":"success","description":"Data successfully received.",
"data":{"geo":{"host":"1.169.101.65","ip":"1.169.101.65","rdns":"1-169-101-65.dynamic-ip.hinet.net",
"asn":3462,"isp":"Data Communication Business Group","country_name":"Taiwan","country_code":"TW",
"region_name":"Hsinchu","region_code":"HSQ","city":"Hsinchu","postal_code":null,
"continent_name":"Asia","continent_code":"AS","latitude":24.8036,"longitude":120.9686,
"metro_code":null,"timezone":"Asia\/Taipei","datetime":"2019-01-31 06:30:48"}}}j

Need to create file that aggregates all addresses.  You can use bash append (command >> file) for this.

curl "https://tools.keycdn.com/geo.json?host=1.169.101.65" >> locations.txt
echo >> locations.txt  //creates new line
curl "https://tools.keycdn.com/geo.json?host=1.179.185.50" >> locations.txt
echo >> locations.txt
curl "https://tools.keycdn.com/geo.json?host=1.34.177.7" >> locations.txt
echo >> locations.txt
curl "https://tools.keycdn.com/geo.json?host=101.1.31.63" >> locations.txt
echo >> locations.txt

Need to loop this through all 3000 entries, delay 3 per second which is api limit.
This gives file with one line per ip address which includes lat long coodinates.

Created bash script to do this (lookup-ips.sh):

#!/bin/bash
input="test-listofips.txt"
while IFS= read -r line
do
  echo 'Checking: ' $line
  curl "https://tools.keycdn.com/geo.json?host=$line" >> locations.txt
  echo >> locations.txt
  sleep 3
done < "$input"

This creates a file "locations.txt" with all detailed location info.
e.g.
{"status":"success","description":"Data successfully received.","data":{"geo":{"host":"1.65.165.195","ip":"1.65.165.195","rdns":"1-65-165-195.static.netvigator.com","asn":4760,"isp":"HKT Limited","country_name":"Hong Kong","country_code":"HK","region_name":"Central and Western District","region_code":"HCW","city":"Central","postal_code":null,"continent_name":"Asia","continent_code":"AS","latitude":22.2909,"longitude":114.15,"metro_code":null,"timezone":"Asia\/Hong_Kong","datetime":"2020-04-30 06:40:34"}}}
{"status":"success","description":"Data successfully received.","data":{"geo":{"host":"122.51.243.78","ip":"122.51.243.78","rdns":"122.51.243.78","asn":45090,"isp":"Shenzhen Tencent Computer Systems Company Limited","country_name":"China","country_code":"CN","region_name":null,"region_code":null,"city":null,"postal_code":null,"continent_name":"Asia","continent_code":"AS","latitude":34.7725,"longitude":113.7266,"metro_code":null,"timezone":"Asia\/Shanghai","datetime":"2020-04-30 06:40:38"}}}
{"status":"success","description":"Data successfully received.","data":{"geo":{"host":"106.13.150.84","ip":"106.13.150.84","rdns":"106.13.150.84","asn":38365,"isp":"Beijing Baidu Netcom Science and Technology Co., Ltd.","country_name":"China","country_code":"CN","region_name":null,"region_code":null,"city":null,"postal_code":null,"continent_name":"Asia","continent_code":"AS","latitude":34.7725,"longitude":113.7266,"metro_code":null,"timezone":"Asia\/Shanghai","datetime":"2020-04-30 06:40:41"}}}

Need to convert to flat file in bulk entry format.
i.e.
24.8036, 120.9686
13.75, 100.4667
24.8036, 120.9686
